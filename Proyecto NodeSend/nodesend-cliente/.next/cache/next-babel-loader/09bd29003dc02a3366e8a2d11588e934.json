{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A308244\\\\Desktop\\\\Proyectos\\\\React\\\\curso-react\\\\Proyecto NodeSend\\\\nodesend-cliente\\\\context\\\\app\\\\appState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA, SUBIR_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR, LIMPIAR_STATE, AGREGAR_PASSWORD, AGREGAR_DESCARGAS } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst AppState = ({\n  children\n}) => {\n  const initialState = {\n    mensaje_archivo: null,\n    nombre: '',\n    nombre_original: '',\n    cargando: null,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: ''\n  }; // Crear dispatch y state\n\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(appReducer, initialState); // Muestra una alerta \n\n  const mostrarAlerta = msg => {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(() => {\n      dispatch({\n        type: OCULTAR_ALERTA\n      });\n    }, 3001);\n  }; // Sube los archivos al servidor\n\n\n  const subirArchivo = async (formData, nombreArchivo) => {\n    dispatch({\n      type: SUBIR_ARCHIVO\n    });\n\n    try {\n      const resultado = await clienteAxios.post('/api/archivos', formData);\n      console.log(resultado.data);\n      dispatch({\n        type: SUBIR_ARCHIVO_EXITO,\n        payload: {\n          nombre: resultado.data.archivo,\n          nombre_original: nombreArchivo\n        }\n      });\n    } catch (error) {\n      // console.log(error);\n      dispatch({\n        type: SUBIR_ARCHIVO_ERROR,\n        payload: error.response.data.msg\n      });\n    }\n  }; // crea un enlace una vez que se subió el archivo\n\n\n  const crearEnlace = async () => {\n    const data = {\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor\n    }; // console.log(data);\n\n    try {\n      const resultado = await clienteAxios.post('/api/enlaces', data);\n      dispatch({\n        type: CREAR_ENLACE_EXITO,\n        payload: resultado.data.msg\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const limpiarState = () => {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregue el password\n\n\n  const agregarPassword = password => {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // agrega un número de descargas\n\n\n  const agregarDescargas = descargas => {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  return __jsx(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      mostrarAlerta,\n      subirArchivo,\n      crearEnlace,\n      limpiarState,\n      agregarPassword,\n      agregarDescargas\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default AppState;","map":{"version":3,"sources":["C:/Users/A308244/Desktop/Proyectos/React/curso-react/Proyecto NodeSend/nodesend-cliente/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","MOSTRAR_ALERTA","OCULTAR_ALERTA","SUBIR_ARCHIVO","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","CREAR_ENLACE_ERROR","LIMPIAR_STATE","AGREGAR_PASSWORD","AGREGAR_DESCARGAS","clienteAxios","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","cargando","descargas","password","autor","url","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","resultado","post","console","log","data","archivo","error","response","crearEnlace","limpiarState","agregarPassword","agregarDescargas"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA,\n    SUBIR_ARCHIVO,\n    SUBIR_ARCHIVO_EXITO,\n    SUBIR_ARCHIVO_ERROR,\n    CREAR_ENLACE_EXITO,\n    CREAR_ENLACE_ERROR,\n    LIMPIAR_STATE,\n    AGREGAR_PASSWORD,\n    AGREGAR_DESCARGAS\n} from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst AppState = ({children}) => {\n\n    const initialState = {\n        mensaje_archivo: null,\n        nombre: '',\n        nombre_original:'',\n        cargando: null,\n        descargas: 1,\n        password: '',\n        autor: null,\n        url: ''\n    }\n\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(appReducer, initialState);\n\n    // Muestra una alerta \n    const mostrarAlerta = msg => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: msg\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 3001);\n    }\n\n    // Sube los archivos al servidor\n    const subirArchivo = async (formData, nombreArchivo) => {\n        \n        dispatch({\n            type: SUBIR_ARCHIVO\n        })\n\n        try {\n            const resultado = await clienteAxios.post('/api/archivos', formData);\n            console.log(resultado.data);            \n\n            dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                    nombre: resultado.data.archivo,\n                    nombre_original: nombreArchivo\n                }\n            })\n\n        } catch (error) {\n            // console.log(error);\n            dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n    // crea un enlace una vez que se subió el archivo\n    const crearEnlace = async () => {\n        const data = {\n            nombre: state.nombre,\n            nombre_original: state.nombre_original,\n            descargas: state.descargas,\n            password: state.password,\n            autor: state.autor\n        }\n        // console.log(data);\n\n        try {\n            const resultado = await clienteAxios.post('/api/enlaces', data);\n            dispatch({\n                type: CREAR_ENLACE_EXITO,\n                payload: resultado.data.msg\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const limpiarState = () => {\n        dispatch({\n            type: LIMPIAR_STATE\n        })\n    }\n\n    // Agregue el password\n    const agregarPassword = password => {\n        dispatch({\n            type: AGREGAR_PASSWORD,\n            payload: password\n        })\n    }\n\n    // agrega un número de descargas\n    const agregarDescargas = descargas => {\n        dispatch({\n            type: AGREGAR_DESCARGAS,\n            payload: descargas\n        })\n    }\n\n    return (\n        <appContext.Provider\n            value={{\n                mensaje_archivo: state.mensaje_archivo,\n                nombre: state.nombre,\n                nombre_original: state.nombre_original,\n                cargando: state.cargando,\n                descargas: state.descargas,\n                password: state.password,\n                autor: state.autor,\n                url: state.url,\n                mostrarAlerta,\n                subirArchivo,\n                crearEnlace,\n                limpiarState,\n                agregarPassword,\n                agregarDescargas\n            }}\n        >\n            {children}\n        </appContext.Provider>\n    )\n}\n\nexport default AppState;"]},"metadata":{},"sourceType":"module"}