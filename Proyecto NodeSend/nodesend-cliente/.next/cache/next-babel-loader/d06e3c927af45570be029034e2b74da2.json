{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\A308244\\\\Desktop\\\\Proyectos\\\\React\\\\curso-react\\\\Proyecto NodeSend\\\\nodesend-cliente\\\\context\\\\auth\\\\authState.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OCULTAR_ALERTA, LOGIN_EXITOSO, LOGIN_ERROR, USUARIO_AUTENTICADO, CERRAR_SESION } from '../../types';\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\n\nvar AuthState = function AuthState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  // Definir un state inicial\n  var initialState = {\n    token: true ? localStorage.getItem('token') : '',\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: null\n  }; // Definir el reducer\n\n  var _useReducer = useReducer(authReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Registrar nuevos usuarios\n\n\n  var registrarUsuario = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(datos) {\n      var respuesta;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return clienteAxios.post('/api/usuarios', datos);\n\n            case 3:\n              respuesta = _context.sent;\n              dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data.msg\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: REGISTRO_ERROR,\n                payload: _context.t0.response.data.msg\n              });\n\n            case 10:\n              // Limpia la alerta después de 3 segundos\n              setTimeout(function () {\n                dispatch({\n                  type: OCULTAR_ALERTA\n                });\n              }, 3000);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function registrarUsuario(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // Autenticar Usuarios\n\n\n  var iniciarSesion = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(datos) {\n      var respuesta;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return clienteAxios.post('/api/auth', datos);\n\n            case 3:\n              respuesta = _context2.sent;\n              dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data.token\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: LOGIN_ERROR,\n                payload: _context2.t0.response.data.msg\n              });\n\n            case 10:\n              // Limpia la alerta después de 3 segundos\n              setTimeout(function () {\n                dispatch({\n                  type: OCULTAR_ALERTA\n                });\n              }, 3000);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function iniciarSesion(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // Retorne el Usuario autenticado en base al JWT\n\n\n  var usuarioAutenticado = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var token, respuesta;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = localStorage.getItem('token');\n\n              if (token) {\n                tokenAuth(token);\n              }\n\n              _context3.prev = 2;\n              _context3.next = 5;\n              return clienteAxios.get('/api/auth');\n\n            case 5:\n              respuesta = _context3.sent;\n\n              if (respuesta.data.usuario) {\n                dispatch({\n                  type: USUARIO_AUTENTICADO,\n                  payload: respuesta.data.usuario\n                });\n              }\n\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              dispatch({\n                type: LOGIN_ERROR,\n                payload: _context3.t0.response.data.msg\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9]]);\n    }));\n\n    return function usuarioAutenticado() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // Cerrar la sesión\n\n\n  var cerrarSesion = function cerrarSesion() {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return __jsx(authContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      cargando: state.cargando,\n      registrarUsuario: registrarUsuario,\n      iniciarSesion: iniciarSesion,\n      usuarioAutenticado: usuarioAutenticado,\n      cerrarSesion: cerrarSesion\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(AuthState, \"h4meAN672mISt93ielJXXMKemns=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["C:/Users/A308244/Desktop/Proyectos/React/curso-react/Proyecto NodeSend/nodesend-cliente/context/auth/authState.js"],"names":["React","useReducer","authContext","authReducer","REGISTRO_EXITOSO","REGISTRO_ERROR","OCULTAR_ALERTA","LOGIN_EXITOSO","LOGIN_ERROR","USUARIO_AUTENTICADO","CERRAR_SESION","clienteAxios","tokenAuth","AuthState","children","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarUsuario","datos","post","respuesta","type","payload","data","msg","response","setTimeout","iniciarSesion","usuarioAutenticado","get","cerrarSesion"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\n\n\nimport { \n    REGISTRO_EXITOSO, \n    REGISTRO_ERROR,\n    OCULTAR_ALERTA,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    USUARIO_AUTENTICADO,\n    CERRAR_SESION\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\nimport tokenAuth from '../../config/tokenAuth';\n\nconst AuthState = ({children}) => {\n\n    // Definir un state inicial\n    const initialState = {\n        token: typeof window !== 'undefined' ? localStorage.getItem('token') : '',\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: null\n    }\n\n    // Definir el reducer\n    const [ state, dispatch ] = useReducer(authReducer, initialState);\n\n    // Registrar nuevos usuarios\n    const registrarUsuario = async datos => {\n        \n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data.msg\n            });\n        } catch (error) {\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: error.response.data.msg\n            })\n        }\n        // Limpia la alerta después de 3 segundos\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 3000);\n    }\n\n    // Autenticar Usuarios\n    const iniciarSesion = async datos => {\n\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data.token\n            })\n        } catch (error) {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: error.response.data.msg\n            })\n        }\n\n        // Limpia la alerta después de 3 segundos\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 3000);\n    }\n\n    // Retorne el Usuario autenticado en base al JWT\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            if(respuesta.data.usuario) {\n                dispatch({\n                    type: USUARIO_AUTENTICADO,\n                    payload: respuesta.data.usuario\n                }) \n            }\n\n        } catch (error) {\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n    // Cerrar la sesión\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return (\n        <authContext.Provider\n            value={{ \n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado, \n                cerrarSesion\n            }}\n        >\n            {children}\n        </authContext.Provider>\n    )\n}\n\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}