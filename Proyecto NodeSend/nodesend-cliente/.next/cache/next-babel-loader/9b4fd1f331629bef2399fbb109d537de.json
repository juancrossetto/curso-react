{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\A308244\\\\Desktop\\\\Proyectos\\\\React\\\\curso-react\\\\Proyecto NodeSend\\\\nodesend-cliente\\\\context\\\\app\\\\appState.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA, SUBIR_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR, LIMPIAR_STATE, AGREGAR_PASSWORD, AGREGAR_DESCARGAS } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nvar AppState = function AppState(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var initialState = {\n    mensaje_archivo: null,\n    nombre: '',\n    nombre_original: '',\n    cargando: null,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: ''\n  }; // Crear dispatch y state\n\n  var _useReducer = useReducer(appReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Muestra una alerta \n\n\n  var mostrarAlerta = function mostrarAlerta(msg) {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(function () {\n      dispatch({\n        type: OCULTAR_ALERTA\n      });\n    }, 3001);\n  }; // Sube los archivos al servidor\n\n\n  var subirArchivo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, nombreArchivo) {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: SUBIR_ARCHIVO\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return clienteAxios.post('/api/archivos', formData);\n\n            case 4:\n              resultado = _context.sent;\n              console.log(resultado.data);\n              dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                  nombre: resultado.data.archivo,\n                  nombre_original: nombreArchivo\n                }\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              // console.log(error);\n              dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: _context.t0.response.data.msg\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function subirArchivo(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // crea un enlace una vez que se subió el archivo\n\n\n  var crearEnlace = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, resultado;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                nombre: state.nombre,\n                nombre_original: state.nombre_original,\n                descargas: state.descargas,\n                password: state.password,\n                autor: state.autor\n              }; // console.log(data);\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return clienteAxios.post('/api/enlaces', data);\n\n            case 4:\n              resultado = _context2.sent;\n              dispatch({\n                type: CREAR_ENLACE_EXITO,\n                payload: resultado.data.msg\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function crearEnlace() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var limpiarState = function limpiarState() {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregue el password\n\n\n  var agregarPassword = function agregarPassword(password) {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // agrega un número de descargas\n\n\n  var agregarDescargas = function agregarDescargas(descargas) {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  return __jsx(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      mostrarAlerta: mostrarAlerta,\n      subirArchivo: subirArchivo,\n      crearEnlace: crearEnlace,\n      limpiarState: limpiarState,\n      agregarPassword: agregarPassword,\n      agregarDescargas: agregarDescargas\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, children);\n};\n\n_s(AppState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AppState;\nexport default AppState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppState\");","map":{"version":3,"sources":["C:/Users/A308244/Desktop/Proyectos/React/curso-react/Proyecto NodeSend/nodesend-cliente/context/app/appState.js"],"names":["React","useReducer","appContext","appReducer","MOSTRAR_ALERTA","OCULTAR_ALERTA","SUBIR_ARCHIVO","SUBIR_ARCHIVO_EXITO","SUBIR_ARCHIVO_ERROR","CREAR_ENLACE_EXITO","CREAR_ENLACE_ERROR","LIMPIAR_STATE","AGREGAR_PASSWORD","AGREGAR_DESCARGAS","clienteAxios","AppState","children","initialState","mensaje_archivo","nombre","nombre_original","cargando","descargas","password","autor","url","state","dispatch","mostrarAlerta","msg","type","payload","setTimeout","subirArchivo","formData","nombreArchivo","post","resultado","console","log","data","archivo","response","crearEnlace","limpiarState","agregarPassword","agregarDescargas"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport {\n    MOSTRAR_ALERTA,\n    OCULTAR_ALERTA,\n    SUBIR_ARCHIVO,\n    SUBIR_ARCHIVO_EXITO,\n    SUBIR_ARCHIVO_ERROR,\n    CREAR_ENLACE_EXITO,\n    CREAR_ENLACE_ERROR,\n    LIMPIAR_STATE,\n    AGREGAR_PASSWORD,\n    AGREGAR_DESCARGAS\n} from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst AppState = ({children}) => {\n\n    const initialState = {\n        mensaje_archivo: null,\n        nombre: '',\n        nombre_original:'',\n        cargando: null,\n        descargas: 1,\n        password: '',\n        autor: null,\n        url: ''\n    }\n\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(appReducer, initialState);\n\n    // Muestra una alerta \n    const mostrarAlerta = msg => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: msg\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 3001);\n    }\n\n    // Sube los archivos al servidor\n    const subirArchivo = async (formData, nombreArchivo) => {\n        \n        dispatch({\n            type: SUBIR_ARCHIVO\n        })\n\n        try {\n            const resultado = await clienteAxios.post('/api/archivos', formData);\n            console.log(resultado.data);            \n\n            dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                    nombre: resultado.data.archivo,\n                    nombre_original: nombreArchivo\n                }\n            })\n\n        } catch (error) {\n            // console.log(error);\n            dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n    // crea un enlace una vez que se subió el archivo\n    const crearEnlace = async () => {\n        const data = {\n            nombre: state.nombre,\n            nombre_original: state.nombre_original,\n            descargas: state.descargas,\n            password: state.password,\n            autor: state.autor\n        }\n        // console.log(data);\n\n        try {\n            const resultado = await clienteAxios.post('/api/enlaces', data);\n            dispatch({\n                type: CREAR_ENLACE_EXITO,\n                payload: resultado.data.msg\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const limpiarState = () => {\n        dispatch({\n            type: LIMPIAR_STATE\n        })\n    }\n\n    // Agregue el password\n    const agregarPassword = password => {\n        dispatch({\n            type: AGREGAR_PASSWORD,\n            payload: password\n        })\n    }\n\n    // agrega un número de descargas\n    const agregarDescargas = descargas => {\n        dispatch({\n            type: AGREGAR_DESCARGAS,\n            payload: descargas\n        })\n    }\n\n    return (\n        <appContext.Provider\n            value={{\n                mensaje_archivo: state.mensaje_archivo,\n                nombre: state.nombre,\n                nombre_original: state.nombre_original,\n                cargando: state.cargando,\n                descargas: state.descargas,\n                password: state.password,\n                autor: state.autor,\n                url: state.url,\n                mostrarAlerta,\n                subirArchivo,\n                crearEnlace,\n                limpiarState,\n                agregarPassword,\n                agregarDescargas\n            }}\n        >\n            {children}\n        </appContext.Provider>\n    )\n}\n\nexport default AppState;"]},"metadata":{},"sourceType":"module"}