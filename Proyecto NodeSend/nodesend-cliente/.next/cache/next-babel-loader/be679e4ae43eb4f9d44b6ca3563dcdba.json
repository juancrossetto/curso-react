{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A308244\\\\Desktop\\\\Proyectos\\\\React\\\\curso-react\\\\Proyecto NodeSend\\\\nodesend-cliente\\\\components\\\\Dropzone.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useCallback, useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport clienteAxios from '../config/axios';\nimport appContext from '../context/app/appContext';\nimport authContext from '../context/auth/authContext';\nimport Formulario from './Formulario';\n\nconst Dropzone = () => {\n  // Context de la app\n  const AppContext = useContext(appContext);\n  const {\n    cargando,\n    mostrarAlerta,\n    subirArchivo,\n    crearEnlace\n  } = AppContext; // Context de autenticación\n\n  const AuthContext = useContext(authContext);\n  const {\n    usuario,\n    autenticado\n  } = AuthContext;\n\n  const onDropRejected = () => {\n    mostrarAlerta('No se pudo subir, el Limite es 1MB, obten una cuenta gratis para subir archivos más grandes');\n  };\n\n  const onDropAccepted = useCallback(async acceptedFiles => {\n    // Crear un form Data\n    const formData = new FormData();\n    formData.append('archivo', acceptedFiles[0]);\n    subirArchivo(formData, acceptedFiles[0].path);\n  }, []);\n  const maxSize = autenticado ? 1000000000000 : 1000000; // Extraer contenido de Dropzone\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    acceptedFiles\n  } = useDropzone({\n    onDropAccepted,\n    onDropRejected,\n    maxSize\n  });\n  const archivos = acceptedFiles.map(archivo => __jsx(\"li\", {\n    key: archivo.lastModified,\n    className: \"bg-white flex-1 p-3 mb-4 shadow-lg rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"font-bold text-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, archivo.path), __jsx(\"p\", {\n    className: \"text-sm text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, (archivo.size / Math.pow(1024, 2)).toFixed(2), \" MB\")));\n  return __jsx(\"div\", {\n    className: \"md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, acceptedFiles.length > 0 ? __jsx(\"div\", {\n    className: \"mt-10 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    className: \"text-2xl font-bold text-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Archivos\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, archivos), autenticado ? __jsx(Formulario, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 39\n    }\n  }) : \"\", cargando ? __jsx(\"p\", {\n    className: \"my-10 text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }\n  }, \"Subiendo Archivo...\") : __jsx(\"button\", {\n    type: \"button\",\n    className: \"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\",\n    onClick: () => crearEnlace(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, \"Crear Enlace\")) : __jsx(\"div\", _extends({}, getRootProps({\n    className: 'dropzone w-full py-32'\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: \"h-100 \"\n  }, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    className: \"text-2xl text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 44\n    }\n  }, \" Suelta el archivo \") : __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"text-2xl text-center text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Selecciona un archivo y arrastralo aqu\\xED\"), __jsx(\"button\", {\n    className: \"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"Selecciona archivos para subir\"))));\n};\n\nexport default Dropzone;","map":{"version":3,"sources":["C:/Users/A308244/Desktop/Proyectos/React/curso-react/Proyecto NodeSend/nodesend-cliente/components/Dropzone.js"],"names":["React","useCallback","useContext","useDropzone","clienteAxios","appContext","authContext","Formulario","Dropzone","AppContext","cargando","mostrarAlerta","subirArchivo","crearEnlace","AuthContext","usuario","autenticado","onDropRejected","onDropAccepted","acceptedFiles","formData","FormData","append","path","maxSize","getRootProps","getInputProps","isDragActive","archivos","map","archivo","lastModified","size","Math","pow","toFixed","length","className"],"mappings":"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","sourcesContent":["import React, {  useCallback, useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport clienteAxios from '../config/axios';\nimport appContext from '../context/app/appContext';\nimport authContext from '../context/auth/authContext';\nimport Formulario from './Formulario';\n\nconst Dropzone = () => {\n\n    // Context de la app\n    const AppContext = useContext(appContext);\n    const { cargando, mostrarAlerta, subirArchivo, crearEnlace } = AppContext;\n\n    // Context de autenticación\n    const AuthContext = useContext(authContext);\n    const { usuario, autenticado } = AuthContext;\n\n    const onDropRejected = () => {\n        mostrarAlerta('No se pudo subir, el Limite es 1MB, obten una cuenta gratis para subir archivos más grandes');\n    }\n\n    const onDropAccepted = useCallback( async (acceptedFiles) => {\n        // Crear un form Data\n        const formData = new FormData();\n        formData.append('archivo', acceptedFiles[0]);\n\n        subirArchivo(formData, acceptedFiles[0].path);\n    }, []);\n\n\n    const maxSize = autenticado ? 1000000000000 : 1000000;\n\n    // Extraer contenido de Dropzone\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({onDropAccepted, onDropRejected, maxSize});\n\n    const archivos = acceptedFiles.map( archivo => (\n        <li key={archivo.lastModified} className=\"bg-white flex-1 p-3 mb-4 shadow-lg rounded\">\n            <p className=\"font-bold text-xl\">{archivo.path}</p> \n            <p className=\"text-sm text-gray-500\">{ (archivo.size / Math.pow(1024, 2)).toFixed(2) } MB</p>\n        </li>\n    ) );\n\n\n\n\n    return ( \n        <div className=\"md:flex-1 mb-3 mx-2 mt-16 lg:mt-0 flex flex-col items-center justify-center border-dashed border-gray-400 border-2 bg-gray-100 px-4\">\n\n            { acceptedFiles.length > 0 ? (\n                <div className=\"mt-10 w-full\">\n                    <h4 className=\"text-2xl font-bold text-center mb-4\">Archivos</h4>\n                    <ul>\n                        {archivos}\n                    </ul>\n\n                    {\n                        autenticado ? <Formulario /> : \"\"\n                    }\n\n                    { cargando ? <p className=\"my-10 text-center text-gray-600\">Subiendo Archivo...</p> : (\n                        <button\n                            type=\"button\"\n                            className=\"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\"\n                            onClick={ () => crearEnlace()  }\n                        >\n                            Crear Enlace\n                        </button>\n                    )}\n\n\n                </div>\n\n            ) : (\n                <div { ...getRootProps({ className: 'dropzone w-full py-32' }) }>\n                    <input className=\"h-100 \" { ...getInputProps() } />\n                        {\n                            isDragActive ? <p className=\"text-2xl text-center text-gray-600\"> Suelta el archivo </p> :\n                            <div className=\"text-center\">\n                                <p className=\"text-2xl text-center text-gray-600\">Selecciona un archivo y arrastralo aquí</p>\n                                <button className=\"bg-blue-700 w-full py-3 rounded-lg text-white my-10 hover:bg-blue-800\" type=\"button\">\n                                    Selecciona archivos para subir\n                                </button>\n                            </div>\n                        }\n                </div>\n            ) }\n        </div>\n     );\n}\n \nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}